name: Analysis quality code with sonarqube
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  backend:
    name: Code quality analysis back end
    runs-on: ubuntu-latest
    defaults: 
      run:
        working-directory: ./back/
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'zulu'
      - name: Cache SonarCloud packages
        uses: actions/cache@v2
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          cd back
          mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
          -Dsonar.projectKey=Lara-cerq_Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD \
          -Dsonar.organization=lara-cerq \
          -Dsonar.sources=src/main \
          -Dsonar.exclusions=src/main/resources/static/** \
          -Dsonar.tests=src/test \
          -Dsonar.javascript.lcov.reportPaths=../front/coverage/bobapp/lcov.info \
          -Dsonar.java.binaries=target/classes \
          -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml \
          -Dsonar.sourceEncoding=UTF-8 \
          -Dsonar.branch.name=main
  frontend:
    name: Code quality analysis front end
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./front/
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Use Node.js 18.x
        uses: actions/setup-node@v2
      - name: Build app
        run: npm ci
      - name: Install
        run: npm install
      - name: Build and run test
        run: |
          npm run build --if-present
          npm test -- --watch=false --browsers=ChromeHeadless --code-coverage
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        with:
          projectBaseDir: front # Sets the project to analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          run: |
            npx sonarqube-scanner 
            -Dsonar.projectKey=Lara-cerq_Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD \
            -Dsonar.organization=lara-cerq \
            -Dsonar.sources=src
            -Dsonar.exclusions=src/polyfills.ts
            -Dsonar.tests=src
            -Dsonar.test.inclusions=src/**/*.spec.ts,src/test/**,src/**/*Test.java
            -Dsonar.javascript.lcov.reportPaths=coverage/bobapp/lcov.info
            -Dsonar.sourceEncoding=UTF-8
            -Dsonar.branch.name=main
